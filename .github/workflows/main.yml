name: Build and Release Application

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    outputs:
      artifact-path: ${{ steps.upload.outputs.artifact-path }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build application
      run: |
        $env:PYTHONPATH = "$env:PYTHONPATH;$PWD"
        pyinstaller MyApp.spec --noconfirm
        
    - name: Upload Windows artifact
      id: upload
      uses: actions/upload-artifact@v4
      with:
        name: Bihar-Police-Notebook-windows
        path: dist/
        retention-days: 30

  build-macos:
    runs-on: macos-14
    outputs:
      artifact-path: ${{ steps.upload.outputs.artifact-path }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build application
      run: |
        export PYTHONPATH="${PYTHONPATH}:${PWD}"
        pyinstaller MyApp.spec --noconfirm
        
    - name: Upload macOS artifact
      id: upload
      uses: actions/upload-artifact@v4
      with:
        name: Bihar-Police-Notebook-macos
        path: dist/
        retention-days: 0

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Derive version from tag
      id: version
      run: |
        echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
        echo "date=$(date)" >> $GITHUB_OUTPUT
        
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: Bihar-Police-Notebook-windows
        
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: Bihar-Police-Notebook-macos
        
    - name: Debug - List all files
      run: |
        echo "=== Current Directory ==="
        pwd
        echo ""
        echo "=== All Files and Directories ==="
        ls -la
        echo ""
        echo "=== Find all executable files ==="
        find . -name "*.exe" -o -name "*.app" -o -name "Bihar*Notebook*" 2>/dev/null || true
        echo ""
        echo "=== Check if files exist ==="
        [ -f "Bihar-Police-Notebook-Windows.exe" ] && echo "✅ Bihar-Police-Notebook-Windows.exe exists" || echo "❌ Bihar-Police-Notebook-Windows.exe not found"
        [ -f "Bihar-Police-Notebook.app" ] && echo "✅ Bihar-Police-Notebook.app exists" || echo "❌ Bihar-Police-Notebook.app not found"
        [ -d "Bihar-Police-Notebook.app" ] && echo "✅ Bihar-Police-Notebook.app directory exists" || echo "❌ Bihar-Police-Notebook.app directory not found"
        
    - name: Validate build files exist
      run: |
        echo "Validating that build files exist before creating release..."
        
        # Check for Windows executable
        if [ ! -f "Bihar-Police-Notebook-Windows.exe" ]; then
          echo "❌ ERROR: Windows executable 'Bihar-Police-Notebook-Windows.exe' not found!"
          echo "Available files:"
          ls -la
          exit 1
        fi
        
        # Check for macOS app bundle
        if [ ! -d "Bihar-Police-Notebook.app" ]; then
          echo "❌ ERROR: macOS app bundle 'Bihar-Police-Notebook.app' not found!"
          echo "Available files:"
          ls -la
          exit 1
        fi
        
        echo "✅ All build files found successfully!"
        
    - name: Create macOS app zip
      run: |
        echo "Creating zip file for macOS app bundle..."
        zip -r "Bihar-Police-Notebook-macos.zip" "Bihar-Police-Notebook.app"
        echo "✅ Created Bihar-Police-Notebook-macos.zip"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body: |
          ## Bihar Police Notebook ${{ steps.version.outputs.version }}
          
          ### Downloads
          - **Windows**: Bihar-Police-Notebook-Windows.exe (executable)
          - **macOS**: Bihar-Police-Notebook-macos.zip (macOS app bundle)
          
          ### Installation
          - **Windows**: Download and run the .exe file
          - **macOS**: Download the zip file, extract, and drag Bihar-Police-Notebook.app to Applications folder
          
          ### Changes
          - Built from commit: ${{ github.sha }}
          - Build date: ${{ steps.version.outputs.date }}
        files: |
          Bihar-Police-Notebook-Windows.exe
          Bihar-Police-Notebook-macos.zip
        draft: false
        prerelease: false 