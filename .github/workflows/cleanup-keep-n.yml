name: Cleanup Old Releases (Keep Last 5)

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch: # Allow manual trigger

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check total releases
      id: check-releases
      run: |
        TOTAL_RELEASES=$(gh api repos/${{ github.repository }}/releases --jq 'length')
        echo "total=$TOTAL_RELEASES" >> $GITHUB_OUTPUT
        echo "Total releases found: $TOTAL_RELEASES"
        
    - name: Cleanup old releases (keep last 5)
      if: steps.check-releases.outputs.total > '5'
      run: |
        echo "More than 5 releases found. Cleaning up old ones..."
        
        # Get all releases except the latest 5
        RELEASES=$(gh api repos/${{ github.repository }}/releases --jq '.[5:] | .[].id')
        
        if [ -n "$RELEASES" ]; then
          echo "Found old releases to delete (keeping last 5):"
          echo "$RELEASES"
          
          # Delete each old release
          for release_id in $RELEASES; do
            echo "Deleting release ID: $release_id"
            gh api repos/${{ github.repository }}/releases/$release_id --method DELETE
            echo "âœ… Successfully deleted release ID: $release_id"
          done
          
          echo "ðŸŽ‰ Cleanup completed successfully!"
        else
          echo "No old releases found to delete"
        fi
        
    - name: No cleanup needed
      if: steps.check-releases.outputs.total <= '5'
      run: |
        echo "âœ… Only ${{ steps.check-releases.outputs.total }} releases found. No cleanup needed."
        echo "Keeping all releases (5 or fewer total)."
        
    - name: Cleanup old artifacts (older than 30 days)
      run: |
        echo "Cleaning up old artifacts..."
        
        # Get artifacts older than 30 days
        ARTIFACTS=$(gh api repos/${{ github.repository }}/actions/artifacts --jq '.artifacts[] | select(.created_at < "'$(date -d '30 days ago' -Iseconds)'") | .id')
        
        if [ -n "$ARTIFACTS" ]; then
          echo "Found old artifacts to delete:"
          echo "$ARTIFACTS"
          
          # Delete each old artifact
          for artifact_id in $ARTIFACTS; do
            echo "Deleting artifact ID: $artifact_id"
            gh api repos/${{ github.repository }}/actions/artifacts/$artifact_id --method DELETE
            echo "âœ… Successfully deleted artifact ID: $artifact_id"
          done
          
          echo "ðŸŽ‰ Artifact cleanup completed successfully!"
        else
          echo "No old artifacts found to delete"
        fi
        
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 